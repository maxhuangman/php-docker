services:
  # Webman 服务
  webman:
    build: ./webman  # 使用 webman 目录下的 Dockerfile 构建
    container_name: webman
    ports:
      - "8787:8787"
    volumes:
      - ./webman/www:/app
  # FrankenPHP 服务
  frankenphp:
    build: ./frankenphp  # 使用 frankenphp 目录下的 Dockerfile 构建
    container_name: frankenphp
    restart: always # 容器随docker启动自启
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp" # HTTP/3
    volumes:
      - ./frankenphp/wwwroot:/app # 网站根目录
      - ./frankenphp/data:/data
      - ./frankenphp/config:/config
      - ./caddy/certs:/etc/caddy/certs
      - ./caddy/logs:/var/log/caddy
      - ./caddy/Caddyfile:/etc/frankenphp/Caddyfile:ro  # 正确路径
    environment:
      # - ENABLE_HTTPS=false # 禁用自动 HTTPS
      - PHP_MEMORY_LIMIT=512M # PHP 内存限制
      - PHP_MAX_EXECUTION_TIME=300 # 最大执行时间
    healthcheck:
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  # MySQL 数据库服务
  mysql:
    image: mysql:8.4  # 官方镜像（推荐使用固定版本）
    container_name: mysql  # 自定义容器名称
    environment:
      MYSQL_ROOT_PASSWORD: 123456 # 设置 root 用户密码
      MYSQL_DATABASE: default  # 容器启动时创建的默认数据库
      MYSQL_USER: default    # 创建普通用户
      MYSQL_PASSWORD: 123456  # 普通用户密码
    volumes:
      - ./mysql/logs:/var/log/mysql # 映射日志目录，宿主机:容器
      - ./mysql/data:/var/lib/mysql # 映射数据目录，宿主机:容器
      - ./mysql/conf.d:/etc/mysql/conf.d # 映射配置目录，宿主机:容器
    ports:
      - "3306:3306"  # 暴露默认 MySQL 端口（主机端口:容器端口）
    restart: always # 容器随docker启动自启
    healthcheck:  # 健康检查配置
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 10s
      retries: 5
  # Redis 缓存服务
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - ./redis/data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
      - ./redis/logs:/logs
  # DPanel 服务
  dpanel:
    image: dpanel/dpanel:latest
    container_name: dpanel # 更改此名称后，请同步修改下方 APP_NAME 环境变量
    restart: always
    ports:
      - "100:80"
      - "443:443"
      - "8807:8080" # 替换 8807 可更改面板访问端口
    environment:
      APP_NAME: dpanel # 请保持此名称与 container_name 一致
    volumes:
      - ./dpanel:/dpanel # 将 /home/dpanel 更改为你想要挂载的宿主机目录
  # Elasticsearch 服务
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.3
    container_name: elasticsearch
    volumes:
      - ./elasticsearch/data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xms1g -Xmx1g"
      discovery.type: single-node
      ELASTIC_PASSWORD: "123456"
      xpack.security.enabled: "true"
      xpack.security.http.ssl.enabled: "false"
      xpack.security.transport.ssl.enabled: "false"
      TZ: Asia/Shanghai
  # Alist 文件管理服务
  alist:
    image: 'xhofe/alist:beta'
    container_name: alist
    volumes:
      - './alist:/opt/alist/data'
    ports:
      - '5244:5244'
    environment:
      - PUID=0
      - PGID=0
      - UMASK=022
    restart: unless-stopped

# 自定义网络配置（容器间可通过服务名通信）
networks:
  app_network:
    driver: bridge  # 桥接网络